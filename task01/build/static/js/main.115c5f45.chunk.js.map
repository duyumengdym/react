{"version":3,"sources":["TodoList/TodoInput.js","TodoList/Todoing.js","TodoList/TodoList.js","index.js"],"names":["TodoInput","handleInput","e","keyCode","title","target","value","trim","alert","item","done","props","addItem","bind","onKeyDown","this","type","ref","placeholder","Component","Todoing","changeStatus","index","countUndo","i","data","map","countdone","del","key","onClick","delItem","checked","TodoList","newData","state","concat","setState","window","localStorage","setItem","JSON","stringify","RemoveItem","splice","ChangeStatus","arr","parse","getItem","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.115c5f45.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n//受控组件：value值被react控制的表单元素\r\n// 可以实时获取表单元素的值（表单验证）\r\nexport default class TodoInput extends Component {\r\n    constructor(){\r\n        super();\r\n        this.handleInput=this.handleInput.bind(this);\r\n    }\r\n    // 绑定this,事件处理函数写成箭头函数，或者用bind绑定\r\n    handleInput = (e)=>{\r\n        if(e.keyCode===13){\r\n            let title =e.target.value;\r\n            if(!title.trim()){\r\n                alert('任务不能为空，请重新输入');\r\n                return;\r\n            }\r\n            let item = {\r\n                title,\r\n                done: \"flase\"\r\n            };\r\n            this.props.addItem(item);\r\n            e.target.value = '';\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input onKeyDown={this.handleInput} type=\"text\" ref='text' placeholder=\"添加ToDo\"/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nexport default class Todoing extends Component {\r\n    delItem(index){\r\n        this.props.del(index);;\r\n    }\r\n    changeStatus = (index) => {\r\n        this.props.changeStatus(index);\r\n    };\r\n    countUndo=()=>{\r\n        var i=0;\r\n        this.props.data.map(({done})=>{\r\n            if(done===\"flase\"){\r\n                 i++;\r\n            }             \r\n        })\r\n        return i;\r\n    }\r\n    countdone=()=>{\r\n        var i=0;\r\n        this.props.data.map(({done})=>{\r\n            if(done===\"true\"){\r\n                 i++;\r\n            }             \r\n        })\r\n        return i;\r\n    }\r\n    render() {\r\n        return (\r\n            <ul>\r\n                <h2>正在进行&nbsp;&nbsp;&nbsp;&nbsp;{this.countUndo()}</h2>\r\n                {\r\n                   this.props.data.map(({title, done}, index)=>{\r\n                       if(done===\"flase\"){\r\n                            return <li key={index}><input type=\"checkbox\"onClick={this.changeStatus.bind(this, index)}/>{title}---<button onClick={this.delItem.bind(this,index)}>删除</button></li>\r\n                       }             \r\n                   })\r\n                }\r\n                <h2>已经完成&nbsp;&nbsp;&nbsp;&nbsp;{this.countdone()}</h2>\r\n                {\r\n                   this.props.data.map(({title, done}, index)=>{\r\n                       if(done===\"true\"){\r\n                            return <li key={index}><input type=\"checkbox\" checked=\"checked\"onClick={this.changeStatus.bind(this, index)}/>{title}---<button onClick={this.delItem.bind(this,index)}>删除</button></li>\r\n                       }             \r\n                   })\r\n                }\r\n            </ul>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport TodoInput from './TodoInput'\r\nimport Todoing from './Todoing'\r\nimport'./Todo.css';\r\nexport default class TodoList extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={data:[]}\r\n    }\r\n    componentDidMount(){\r\n        let data = JSON.parse(localStorage.getItem('todo'));\r\n        if(data){\r\n            this.setState({\r\n                data:data\r\n            })\r\n        }\r\n\t}\r\n    addItem=(item)=>{\r\n        // console.log(item);\r\n        let newData = this.state.data.concat(item);\r\n        // console.log(newData);\r\n        this.setState({\r\n            data: newData\r\n        },()=>{\r\n            window.localStorage.setItem('todo', JSON.stringify(this.state.data));\r\n        })\r\n       \r\n    }\r\n    RemoveItem=(index)=>{\r\n        this.state.data.splice(index, 1);\r\n        let newData = this.state.data;\r\n        this.setState({data : newData},()=>{\r\n            window.localStorage.setItem('todo', JSON.stringify(this.state.data));\r\n       });\r\n    }\r\n    ChangeStatus = (index) => {\r\n        let arr = this.state.data;\r\n        arr[index].done = arr[index].done ==='true'?\"flase\":\"true\";\r\n        this.setState({\r\n            data: arr\r\n        },()=>{\r\n            window.localStorage.setItem('todo', JSON.stringify(this.state.data));\r\n       });\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"box\">\r\n                <h1>ToDoList</h1>\r\n                <TodoInput addItem={this.addItem} data={this.state.data}/>\r\n                <Todoing del={this.RemoveItem} changeStatus={this.ChangeStatus} data={this.state.data}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport TodoList from './TodoList/TodoList.js';\nReactDOM.render(<TodoList />, document.getElementById('root'));\n\n// serviceWorker.unregister();\n"],"sourceRoot":""}